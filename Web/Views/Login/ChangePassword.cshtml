@model Domain.ChangePasswordModel
@using Domain
@{
    ViewBag.Title = "ChangePassword";
    Layout = "~/Views/Shared/LayoutLog.cshtml";
    string[] pathObject = Directory.GetFiles(AppDomain.CurrentDomain.BaseDirectory + "\\Content\\Animation Data");
}
<canvas id="animations"></canvas>
@using (Html.BeginForm("ChangePassword", "Login", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <p style="display:none" id="amountPics">@pathObject.Length</p>
    for (var i = 0; i < @pathObject.Length; i++)
    {
        <p style="display:none" id="picture @i">@pathObject[i]</p>
    }

    <div class="Login_block">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="d-flex flex-column justify-content-start align-items-center">
            <div class="form-group">
                <a href="~/Home/Index">
                    <img class="" alt="Logo" src="~/Content/images/logo.png" />
                </a>
            </div>

            <div class="form-group">
                <label for="exampleInputPassword1" class="text-white">Enter current password:</label><br />
                @Html.PasswordFor(model => model.OldPassword, new { htmlAttributes = new { @class = "form-control", @id = "exampleInputPassword1" } })<br />
                @Html.ValidationMessageFor(model => model.OldPassword, null, new { @class = "text-warning" })

                <label for="exampleInputPassword2" class="text-white">Enter new password:</label><br />
                @Html.PasswordFor(model => model.NewPassword, new { htmlAttributes = new { @class = "form-control", @id = "exampleInputPassword2" } })<br />
                @Html.ValidationMessageFor(model => model.NewPassword, null, new { @class = "text-warning" })

                <label for="exampleInputPassword3" class="text-white">Confirm password:</label><br />
                @Html.PasswordFor(model => model.ConfirmationPassword, new { htmlAttributes = new { @class = "form-control", @id = "exampleInputPassword3" } })<br />
                @Html.ValidationMessageFor(model => model.ConfirmationPassword, null, new { @class = "text-warning" })

            </div>

            <input type="submit" class="btn btn-outline-primary text-white" value="Submit" />

        </div>
    </div>
}

